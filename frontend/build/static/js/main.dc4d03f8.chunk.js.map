{"version":3,"sources":["components/Map/Map.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["map","hexapts","hexaptsout","lattosave","longtosave","IndexMap","props","useState","makehexagon","rad","pt","points","angle","coord","window","google","maps","geometry","spherical","computeOffset","push","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","setMap","markpt","Marker","position","lati","longi","lat","lng","console","log","generate","useEffect","hexagon","radius","radii","Math","sqrt","LatLng","polygon","markhexagon","i","hexagonoverlay","markouthexagon","c","interpolate","outhexagonoverlay","axios","post","latikey","then","res","catch","err","longikey","initMap","Map","document","getElementById","center","zoom","mapTypeControl","streetViewControl","fullscreenControl","renderMap","url","index","getElementsByTagName","script","createElement","src","async","defer","parentNode","insertBefore","loadScript","id","className","Home","setRadius","setLat","setLng","setHexagon","onSuccess","pos","coords","latitude","longitude","onError","error","handleInput","e","target","name","value","onClick","navigator","geolocation","getCurrentPosition","maximumAge","timeout","enableHighAccuracy","style","color","class","onSubmit","preventDefault","type","placeholder","onChange","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dc4d03f8.chunk.js","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport Fab from '@material-ui/core/Fab';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport axios from 'axios'\nimport './custom.css'\n\nlet map\nlet hexapts=[]\nvar hexaptsout = [];\nvar lattosave = [];\nvar longtosave = [];\n\nconst IndexMap =(props)=> {\nconst [userLocation,setUserLocation]=useState([23,32])\nfunction generate(pt) {\n  var lati;\n  var longi;\n  lati = 0;\n  longi = 0;\n  lati = pt.lat();\n  longi = pt.lng();\n  lattosave.push(lati);\n  longtosave.push(longi);\n  console.log('latitude',lattosave)\n  console.log('longitude',longtosave)\n  return;\n\n}\nfunction makehexagon(rad, pt) {\n  var points = [];\n  for (var angle = 0; angle < 360; angle += 60) {\n      var coord = window.google.maps.geometry.spherical.computeOffset(\n          pt,\n          rad,\n          angle\n      );\n      points.push(coord);\n  }\n\n  // Construct the polygon\n  var polygon = new window.google.maps.Polygon({\n      paths: points,\n      strokeColor: \"#FFFF00\",\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: \"#F8FCFC\",\n      fillOpacity: 0.1,\n  });\n  polygon.setMap(map);\n}\nfunction markpt(coord) {\n  new window.google.maps.Marker({\n      position: coord,\n      map: map\n  });\n  generate(coord);\n}\nfunction hexagonoverlay(rad) {\n  for (var i = 0; i < 6; i++) {\n      var b = hexapts[i];\n      makehexagon(rad, b);\n  }\n}\n\nfunction markouthexagon(rad) {\n  for (var angle = 30; angle < 390; angle += 60) {\n      var coord = window.google.maps.geometry.spherical.computeOffset(\n          new window.google.maps.LatLng(props.lat,props.lng),\n          rad,\n          angle\n      );\n      hexaptsout.push(coord);\n      markpt(coord);\n\n  }\n  var polygon = new window.google.maps.Polygon({\n      paths: hexaptsout,\n      strokeColor: \"#FF0000\",\n      strokeOpacity: 0.8,\n      strokeWeight: 3,\n      fillColor: \"#F8FCFC\",\n      fillOpacity: 0.2,\n  });\n  polygon.setMap(map);\n}\n//outer hexagon overlay\nfunction outhexagonoverlay(radii) {\n  for (let i = 0; i < 6; i++) {\n      var b = hexaptsout[i];\n      makehexagon(radii, b);\n  }\n  for (let i = 0; i < 6; i++) {\n      var c = window.google.maps.geometry.spherical.interpolate(\n          hexaptsout[i],\n          hexaptsout[(i + 1) % 6],\n          0.5\n      );\n      makehexagon(radii, c);\n      hexaptsout.push(c);\n  }\n}\nfunction markhexagon(rad) {\n  for (var angle = 30; angle < 390; angle += 60) {\n      var coord = window.google.maps.geometry.spherical.computeOffset(\n          new window.google.maps.LatLng(props.lat,props.lng),\n          rad,\n          angle\n      );\n      hexapts.push(coord);\n      markpt(coord);\n  }\n  var polygon = new window.google.maps.Polygon({\n      paths: hexapts,\n      strokeColor: \"#FF0000\",\n      strokeOpacity: 0.8,\n      strokeWeight: 3,\n      fillColor: \"#F8FCFC\",\n      fillOpacity: 0.2,\n  });\n  console.log(map)\n  polygon.setMap(map);\n}\n\nuseEffect(()=>{\n  if(props.hexagon){\n    var radius=props.radius*1000;\n    var radii=radius/Math.sqrt(3)\n    new window.google.maps.Marker({\n      map,\n      position:{lat:props.lat,lng:props.lng}\n    })\n    markhexagon(radius)\n    hexagonoverlay(radii);\n    markouthexagon((2 * radius));\n    outhexagonoverlay(radii);\n\n    axios.post('/getlati',{\n      latikey:lattosave\n    })\n    .then((res)=>{\n      console.log(res)\n    })\n    .catch(err=>{\n      console.log(err)\n    })\n\n    axios.post('/getlongi',{\n      longikey:longtosave\n    })\n    .then(res=>{\n      console.log(res)\n    })\n    .catch(err=>{\n      console.log(err)\n    })\n  }\n},[props.hexagon])\n\nconst initMap=()=>{\n  map = new window.google.maps.Map(document.getElementById(\"map\"), {\n    center:{lat:23,lng:78},\n      zoom: 10,\n      mapTypeControl: false,\n      streetViewControl:false,\n      fullscreenControl:false,\n    })\n}\nconst renderMap = () => {\n  loadScript(\n    \"https://maps.googleapis.com/maps/api/js?libraries=geometry&callback=initMap\"\n  );\n  window.initMap = initMap;\n}\nuseEffect(()=>{\n  renderMap()\n},[])\nreturn (\n<div id=\"map\" className=\"map\"></div>\n)\n}\nfunction loadScript(url) {\n  var index = window.document.getElementsByTagName(\"script\")[0];\n  var script = window.document.createElement(\"script\");\n  script.src = url;\n  script.async = true;\n  script.defer = true;\n  index.parentNode.insertBefore(script, index);\n}\nexport default IndexMap;","import React,{useState} from 'react'\nimport './custom.css'\nimport MapContainer from './../Map/Map'\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\n\nconst Home=(props)=>{\n    const [radius,setRadius]=useState(\"\")\n    const [lat,setLat]=useState(\"\")\n    const [lng,setLng]=useState(\"\")\n    const [hexagon,setHexagon]=useState(false)\n\n    const myLocation=()=>{\n      var options = { maximumAge: 3000, timeout: 5000, enableHighAccuracy: true };//check if we don't get location in 30 seconds\n      var watchID = navigator.geolocation.getCurrentPosition(onSuccess, onError, options);\n  }\n  \n  const onSuccess=(pos)=>{\n      setLat(pos.coords.latitude)\n      setLng(pos.coords.longitude)\n  }\n  \n  const onError=(error)=>{\n      console.log(error)\n  }\n    const handleInput=(e)=>{\n      const {name,value}=e.target\n      if(name==='radius'){\n        setRadius(value)\n      }\n      else if(name==='lat'){\n        setLat(value)\n      }\n      else if(name==='lng'){\n        setLng(value)\n      }\n      else if(name==='hexagon'){\n        setHexagon(!hexagon)\n      }\n    }\n    \n    const handleSubmit=(e)=>{\n        e.preventDefault()\n      }\n      return(\n        <div className='home'>\n        <MapContainer radius={radius} lat={lat} lng={lng} hexagon={hexagon}/>\n        <div className=\"location-button\">\n  <button onClick={myLocation} className=\"myLocationBtn\">\n    <LocationOnIcon style={{ color: \"#960A0A\"}} />\n  </button>\n  </div>\n        <div class=\"login-page\">\n          <div class=\"form\">\n              <div class=\"login-header\">\n                  My Web App\n              </div>\n            <form onSubmit={handleSubmit}>\n              <div className=\"group\">\n                <input\n                type=\"text\"\n                name=\"radius\"\n                value={radius}\n                placeholder=\"Enter radius\" \n                onChange={handleInput}\n                />\n              </div>\n              <div className=\"group\">\n                <input\n                type=\"text\"\n                name=\"lat\"\n                value={lat}\n                placeholder=\"Enter latitude\"\n                onChange={handleInput}\n                />\n              </div>\n              <div className=\"group\">\n                <input\n                type=\"text\"\n                name=\"lng\"\n                value={lng}\n                placeholder=\"Enter Longitude\"\n                onChange={handleInput}\n                />\n              </div>\n              <div className='group'>\n                <input\n                type='checkbox'\n                name='hexagon'\n                value={hexagon}\n                onChange={handleInput}\n                />Check box to show Hexagon\n              </div>\n              <div className=\"group\">\n              <button className=\"button\">Get the data!</button>\n              </div>\n            </form>\n          </div>\n        </div>\n        </div>\n        )\n    }\n  export default Home;","import React from 'react';\nimport './App.css'\nimport {BrowserRouter as Router,Route} from \"react-router-dom\";\nimport Home from './components/Home/Home'\nimport Map from './components/Map/Map'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Route path='/' exact component={Home} />\n      <Route path='/map' exact component={Map} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}